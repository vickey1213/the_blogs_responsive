import importlib
from typing import Any


def import_class(class_path):
    module_name, class_name = class_path.rsplit(".", 1)
    module = importlib.import_module(module_name)
    return getattr(module, class_name)


def document_loader(reader_type: str) -> Any:
    mapping = {
        "airtable": "nextpy.ai.rag.document_loaders.airtable.base.AirtableReader",
        "apify_dataset": "nextpy.ai.rag.document_loaders.apify.dataset.base.ApifyDataset",
        "asana": "nextpy.ai.rag.document_loaders.asana.base.AsanaReader",
        "azcognitive_search": "nextpy.ai.rag.document_loaders.azcognitive_search.base.AzCognitiveSearchReader",
        "bilibili": "nextpy.ai.rag.document_loaders.bilibili.base.BilibiliTranscriptReader",
        "boarddocs": "nextpy.ai.rag.document_loaders.boarddocs.base.BoardDocsReader",
        "chatgpt_plugin": "nextpy.ai.rag.document_loaders.chatgpt_plugin.base.ChatGPTRetrievalPluginReader",
        "chroma": "nextpy.ai.rag.document_loaders.chroma.base.ChromaReader",
        "confluence": "nextpy.ai.rag.document_loaders.confluence.base.ConfluenceReader",
        "couchdb": "nextpy.ai.rag.document_loaders.couchdb.base.SimpleCouchDBReader",
        "dad_jokes": "nextpy.ai.rag.document_loaders.dad_jokes.base.DadJokesReader",
        "deep_lake": "nextpy.ai.rag.document_loaders.deeplake.base.DeepLakeReader",
        "discord": "nextpy.ai.rag.document_loaders.discord.base.DiscordReader",
        "docugami": "nextpy.ai.rag.document_loaders.docugami.base.DocugamiReader",
        "elasticsearch": "nextpy.ai.rag.document_loaders.elasticsearch.base.ElasticsearchReader",
        "faiss": "nextpy.ai.rag.document_loaders.faiss.base.FaissReader",
        "feedly_rss": "nextpy.ai.rag.document_loaders.feedly_rss.base.FeedlyRssReader",
        "feishu_docs": "nextpy.ai.rag.document_loaders.feishu_docs.base.FeishuDocsReader",
        "file_directory": "nextpy.ai.rag.document_loaders.file.base.SimpleDirectoryReader",
        "file_audio": "nextpy.ai.rag.document_loaders.file.audio.base.AudioTranscriber",
        "gladia_audio": "nextpy.ai.rag.document_loaders.file.audio_gladia.base.GladiaAudioTranscriber",
        "file_cjk_pdf": "nextpy.ai.rag.document_loaders.file.cjk_pdf.base.CJKPDFReader",
        "deep_doctection": "nextpy.ai.rag.document_loaders.file.deepdoctection.base.DeepDoctectionReader",
        "file_docx": "nextpy.ai.rag.document_loaders.file.docx.base.DocxReader",
        "file_epub": "nextpy.ai.rag.document_loaders.file.epub.base.EpubReader",
        "flat_pdf": "nextpy.ai.rag.document_loaders.file.flat_pdf.base.FlatPdfReader",
        "image": "nextpy.ai.rag.document_loaders.file.image.base.ImageReader",
        "image_caption": "nextpy.ai.rag.document_loaders.file.image_blip.base.ImageCaptionReader",
        "image_vision": "nextpy.ai.rag.document_loaders.file.image_blip2.base.ImageVisionLLMReader",
        "image_tabular_chart": "nextpy.ai.rag.document_loaders.file.image_deplot.base.ImageTabularChartReader",
        "ipynb": "nextpy.ai.rag.document_loaders.file.ipynb.base.IPYNBReader",
        "json": "nextpy.ai.rag.document_loaders.file.json.base.JSONReader",
        "markdown": "nextpy.ai.rag.document_loaders.file.markdown.base.MarkdownReader",
        "mbox": "nextpy.ai.rag.document_loaders.file.mbox.base.MboxReader",
        "paged_csv": "nextpy.ai.rag.document_loaders.file.paged_csv.base.PagedCSVReader",
        "pandas_csv": "nextpy.ai.rag.document_loaders.file.pandas_csv.base.PandasCSVReader",
        "pandas_excel": "nextpy.ai.rag.document_loaders.file.pandas_excel.base.PandasExcelReader",
        "pdf": "nextpy.ai.rag.document_loaders.file.pdf.base.PDFReader",
        "pdf_miner": "nextpy.ai.rag.document_loaders.file.pdf_miner.base.PDFMinerReader",
        "pptx": "nextpy.ai.rag.document_loaders.file.pptx.base.PptxReader",
        "pymu_pdf": "nextpy.ai.rag.document_loaders.file.pymu_pdf.base.PyMuPDFReader",
        "rdf": "nextpy.ai.rag.document_loaders.file.rdf.base.RDFReader",
        "simple_csv": "nextpy.ai.rag.document_loaders.file.simple_csv.base.SimpleCSVReader",
        "unstructured": "nextpy.ai.rag.document_loaders.file.unstructured.base.UnstructuredReader",
        "firebase_realtimedb": "nextpy.ai.rag.document_loaders.firebase_realtimedb.base.FirebaseRealtimeDatabaseReader",
        "firestore": "nextpy.ai.rag.document_loaders.firestore.base.FirestoreReader",
        "github_repo_issues": "nextpy.ai.rag.document_loaders.github_repo_issues.base.GitHubRepositoryIssuesReader",
        "gmail": "nextpy.ai.rag.document_loaders.gmail.base.GmailReader",
        "google_calendar": "nextpy.ai.rag.document_loaders.google_calendar.base.GoogleCalendarReader",
        "google_docs": "nextpy.ai.rag.document_loaders.google_docs.base.GoogleDocsReader",
        "google_keep": "nextpy.ai.rag.document_loaders.google_keep.base.GoogleKeepReader",
        "google_sheets": "nextpy.ai.rag.document_loaders.google_sheets.base.GoogleSheetsReader",
        "gpt_repo": "nextpy.ai.rag.document_loaders.gpt_repo.base.GPTRepoReader",
        "graphdb_cypher": "nextpy.ai.rag.document_loaders.graphdb_cypher.base.GraphDBCypherReader",
        "graphql": "nextpy.ai.rag.document_loaders.graphql.base.GraphQLReader",
        "hatena_blog": "nextpy.ai.rag.document_loaders.hatena_blog.base.HatenaBlogReader",
        "hubspot": "nextpy.ai.rag.document_loaders.hubspot.base.HubspotReader",
        "huggingface_fs": "nextpy.ai.rag.document_loaders.huggingface.fs.base.HuggingFaceFSReader",
        "intercom": "nextpy.ai.rag.document_loaders.intercom.base.IntercomReader",
        "jira": "nextpy.ai.rag.document_loaders.jira.base.JiraReader",
        # "joplin": "nextpy.ai.rag.document_loaders.joplin.base.JoplinReader",
        "jsondata": "nextpy.ai.rag.document_loaders.jsondata.base.JSONDataReader",
        "kaltura_esearch": "nextpy.ai.rag.document_loaders.kaltura.esearch.base.KalturaESearchReader",
        "kibela": "nextpy.ai.rag.document_loaders.kibela.base.KibelaReader",
        # "make_com": "nextpy.ai.rag.document_loaders.make_com.base.MakeWrapper",
        "mangoapps_guides": "nextpy.ai.rag.document_loaders.mangoapps_guides.base.MangoppsGuidesReader",
        "maps": "nextpy.ai.rag.document_loaders.maps.base.OpenMap",
        "memos": "nextpy.ai.rag.document_loaders.memos.base.MemosReader",
        "metal": "nextpy.ai.rag.document_loaders.metal.base.MetalReader",
        "milvus": "nextpy.ai.rag.document_loaders.milvus.base.MilvusReader",
        "mondaydotcom": "nextpy.ai.rag.document_loaders.mondaydotcom.base.MondayReader",
        "mongo": "nextpy.ai.rag.document_loaders.mongo.base.SimpleMongoReader",
        "notion": "nextpy.ai.rag.document_loaders.notion.base.NotionPageReader",
        "obsidian": "nextpy.ai.rag.document_loaders.obsidian.base.ObsidianReader",
        "opendal": "nextpy.ai.rag.document_loaders.opendal_reader.base.OpendalReader",
        "opendal_azblob": "nextpy.ai.rag.document_loaders.opendal_reader.azblob.base.OpendalAzblobReader",
        "opendal_gcs": "nextpy.ai.rag.document_loaders.opendal_reader.gcs.base.OpendalGcsReader",
        "opendal_s3": "nextpy.ai.rag.document_loaders.opendal_reader.s3.base.OpendalS3Reader",
        "outlook_localcalendar": "nextpy.ai.rag.document_loaders.outlook_localcalendar.base.OutlookLocalCalendarReader",
        "pubmed": "nextpy.ai.rag.document_loaders.papers.pubmed.base.PubmedReader",
        "pinecone": "nextpy.ai.rag.document_loaders.pinecone.base.PineconeReader",
        "qdrant": "nextpy.ai.rag.document_loaders.qdrant.base.QdrantReader",
        "readwise": "nextpy.ai.rag.document_loaders.readwise.base.ReadwiseReader",
        "reddit": "nextpy.ai.rag.document_loaders.reddit.base.RedditReader",
        "slack": "nextpy.ai.rag.document_loaders.slack.base.SlackReader",
        "snscrape_twitter": "nextpy.ai.rag.document_loaders.snscrape_twitter.base.SnscrapeTwitterReader",
        "spotify": "nextpy.ai.rag.document_loaders.spotify.base.SpotifyReader",
        "stackoverflow": "nextpy.ai.rag.document_loaders.stackoverflow.base.StackoverflowReader",
        "steamship": "nextpy.ai.rag.document_loaders.steamship.base.SteamshipFileReader",
        "string_iterable": "nextpy.ai.rag.document_loaders.string_iterable.base.StringIterableReader",
        "trello": "nextpy.ai.rag.document_loaders.trello.base.TrelloReader",
        "twitter": "nextpy.ai.rag.document_loaders.twitter.base.TwitterTweetReader",
        "weather": "nextpy.ai.rag.document_loaders.weather.base.WeatherReader",
        "weaviate": "nextpy.ai.rag.document_loaders.weaviate.base.WeaviateReader",
        "async_web": "nextpy.ai.rag.document_loaders.web.async_web.base.AsyncWebPageReader",
        "beautiful_soup_web": "nextpy.ai.rag.document_loaders.web.beautiful_soup_web.base.BeautifulSoupWebReader",
        "knowledge_base_web": "nextpy.ai.rag.document_loaders.web.knowledge_base.base.RAGWebReader",
        # "readability_web": "nextpy.ai.rag.document_loaders.web.readability_web.base.ReadabilityWebPageReader",
        "rss": "nextpy.ai.rag.document_loaders.web.rss.base.RssReader",
        "simple_web": "nextpy.ai.rag.document_loaders.web.simple_web.base.SimpleWebPageReader",
        # "sitemap": "nextpy.ai.rag.document_loaders.web.sitemap.base.SitemapReader",
        "trafilatura_web": "nextpy.ai.rag.document_loaders.web.trafilatura_web.base.TrafilaturaWebReader",
        "unstructured_web": "nextpy.ai.rag.document_loaders.web.unstructured_web.base.UnstructuredURLLoader",
        "whatsapp": "nextpy.ai.rag.document_loaders.whatsapp.base.WhatsappChatLoader",
        "wikipedia": "nextpy.ai.rag.document_loaders.wikipedia.base.WikipediaReader",
        "wordlift": "nextpy.ai.rag.document_loaders.wordlift.base.WordLiftLoader",
        "wordpress": "nextpy.ai.rag.document_loaders.wordpress.base.WordpressReader",
        "youtube_transcript": "nextpy.ai.rag.document_loaders.youtube_transcript.base.YoutubeTranscriptReader",
        "zendesk": "nextpy.ai.rag.document_loaders.zendesk.base.ZendeskReader",
        "zulip": "nextpy.ai.rag.document_loaders.zulip.base.ZulipReader",
    }
    reader_class = import_class(mapping[reader_type])
    return reader_class
